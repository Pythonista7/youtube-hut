// Code generated by wunderctl. DO NOT EDIT.

export interface CreateUserInput {
	name: string;
	color: string;
	verified: boolean;
}

export interface GetChatsByIdInput {
	id: string;
}

export interface JokeInput {
	category: string;
}

export interface SendChatMsgInput {
	id: string;
	msg: string;
	ts: string;
	name: string;
	color: string;
}

export interface CreateUserResponse {
	data?: CreateUserResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface GetChatsByIdResponse {
	data?: GetChatsByIdResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface GetRandomNameResponse {
	data?: GetRandomNameResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface HelloResponse {
	data?: HelloResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface JokeResponse {
	data?: JokeResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface SendChatMsgResponse {
	data?: SendChatMsgResponseData;
	errors?: ReadonlyArray<GraphQLError>;
}

export interface CreateUserResponseData {
	chat_upsertOneUser?: {
		_id?: string;
	};
}

export interface GetChatsByIdResponseData {
	chat_publicChats: {
		_id?: string;
		id?: string;
		name?: string;
		msg?: string;
		ts?: string;
		color?: string;
	}[];
}

export interface GetRandomNameResponseData {
	random_getApi?: {
		results?: {
			name?: {
				first?: string;
				last?: string;
			};
		}[];
	};
}

export interface HelloResponseData {
	gql_hello?: string;
}

export interface JokeResponseData {
	chuck_getRandom?: {
		id?: string;
		value?: string;
	};
}

export interface SendChatMsgResponseData {
	chat_insertOnePublicChat?: {
		_id?: string;
		ts?: string;
	};
}

export type JSONValue = string | number | boolean | JSONObject | Array<JSONValue>;

export type JSONObject = { [key: string]: JSONValue };

export interface GraphQLError {
	message: string;
	path?: ReadonlyArray<string | number>;
}
